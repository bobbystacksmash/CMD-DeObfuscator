* DOS De-Obfuscator

** ABOUT

/Currently under active development/

The ~DOS DeObfuscator~ is a pure JavaScript library written to
deobfuscate commands passed to ~CMD.EXE~, presenting malicious
commands _mostly_ free of obfuscation characters.

** USAGE
#+BEGIN_SRC javascript
const DOS = require("./index"); // Module is not yet on NPM.

let cmd = `p^o^w^e^r""sh""ell`;
console.log(DOS.deobfuscate(cmd)); // => powershell
#+END_SRC

** EXAMPLES
*** Variable expansion
Attempts to expand all variables in to their expanded form, making
analysis of the whole command clearer:
| Input       | Deobfuscated Output           |
|-------------+-------------------------------|
| ~%COMSPEC%~ | ~C:\Windows\System32\cmd.exe~ |

*** Variable find/replace
Replaces all occurances of ~cmd~ inside the ~%COMSPEC%~ var with the
string ~powershell~:
| Input                      | Deobfuscated Output                  |
|----------------------------+--------------------------------------|
| ~%COMSPEC:cmd=powershell%~ | ~C:\Windows\System32\powershell.exe~ |

*** Variable substrings
Fetches the last seven characters within the ~%COMSPEC%~ var:
| Input           | Deobfuscated Output |
|-----------------+---------------------|
| =%COMSPEC:~-7%= | ~cmd.exe~           |

*** Escape-sequence stripping
All escape characters (~^~) are stripped from the command:
| Input                        | Deobfuscated Output |
|------------------------------+---------------------|
| ~CmD /C p^o^w^e^r^s^h^e^l^l~ | ~CmD /C powershell~ |

*** Empty string removal
All empty strings are removed from the command:
| Input            | Deobfuscated Output |
|------------------+---------------------|
| ~pow""ersh""ell~ | ~powershell~        |

*** Path resolver (/coming soon/)
Any identified paths are resolved in to their absolute form, meaning
we transform this:
| Input                                             | Deobfuscated Output           |
|---------------------------------------------------+-------------------------------|
| ~C:\foo\bar\baz\..\..\..\Windws\System32\cmd.exe~ | ~C:\Windows\System32\cmd.exe~ |

** Reading Material

 - [[https://stackoverflow.com/questions/4094699/how-does-the-windows-command-interpreter-cmd-exe-parse-scripts][How does the Windows Command Interpreter (CMD.EXE) parse scripts?]]
 - [[https://msdn.microsoft.com/en-us/library/a1y7w461.aspx][WINAPI Parsing C Command-Line Arguments]]
 - [[https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/][Everyone quotes command line arguments the wrong way]]
 - [[https://blogs.msdn.microsoft.com/oldnewthing/20100917-00/?p=12833/][Whatâ€™s up with the strange treatment of quotation marks and backslashes by CommandLineToArgvW]]
 - [[https://www.dostips.com/?t=Snippets.Escape][DOS Tips: Escapes]]
 - [[https://docs.microsoft.com/en-gb/windows/desktop/api/shellapi/nf-shellapi-commandlinetoargvw][MSDN CommandLineToArgvW function]]
 - [[https://en.wikibooks.org/wiki/Windows_Batch_Scripting#How_a_command_line_is_interpreted][Windows Batch Scripting: Command Line Interpretation]]
 - [[https://ss64.com/nt/syntax-substring.html][DOS CMD Substrings]]
 - [[https://docs.microsoft.com/en-gb/windows/desktop/ProcThread/environment-variables][MSDN: Environment Variables]]
 - [[https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html][FireEye: Obfuscation in the Wild]]
