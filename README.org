* CMD De-Obfuscator

** ABOUT

/Currently under active development/

~CMD DeObfuscator~ is a pure JavaScript library written to deobfuscate
commands passed to ~CMD.EXE~, presenting malicious commands _mostly_
free of obfuscation characters.

** USAGE
#+BEGIN_SRC javascript
const CMD  = require("./index"),
      opts = { expand_inline: true };

// Strip escape sequences:
CMD.parse(`p^o^w^e^r^s^h^e^l^l`);
// => [ "powershell" ]

// Command clean-up:
CMD.parse(`w""sc"r"i"p"t e""vil.js`);
// => [ `"wscript" evil.js ]`

// Expand environment variables with substrings:
CMD.parse(`%comspec:~-16,1%%comspec:~-1%%comspec:~-13,1% foo=bar`, opts);
// => [ "Set foo=bar" ]

// Find/replace known values in environment variables:
CMD.parse(`%comspec:cmd=powershell%`)
// => C:\Windows\System32\powershell.exe

// Flattens nested 'CMD.EXE' instances:
CMD.parse(`cmd cmd cmd cmd calc.exe`);
// => [ "calc.exe" ]

// Handles delayed expansion within nested CMD contexts
CMD.parse(`cmd /V:O "set foo=bar& echo !foo!"`);
// => [ "set foo=bar", "echo bar" ]
#+END_SRC

** API

*** =CMD.parse(cmdstr, [options])=
 *Returns*: /<string[]>/

 - =cmdstr= /<string>/ the command string to parse
 - =options= /<Object>/
   - =delayed_expansion= /<bool>/ *Default*: =false=
   - =expand_inline= /<bool>/ *Default*: =false=
   - =vars= /<Object>/ *Default*: ={}=

#+BEGIN_SRC javascript
CMD.parse(`p^ow^er""she"l"l`);
CMD.parse(`echo !hello!`, { delayed_expansion: true, vars: { hello: "world" } });
CMD.parse(`echo %hello%`, { expand_inline:     true, vars: { hello: "world" } });
#+END_SRC

Parses a given command string in to individual commands before
applying variable expansion and de-obfuscation filters to each
identified command.  Returns an array of cleaned-up commands.

If =delayed_expansion= is set to =true=, the given =cmdstr= will be
evaluated as if CMD.EXE had been started with =/V:ON= or =SETLOCAL
EnableDelayedExpansion=, thus allowing =!foo!= to be expanded.

If =expand_inline= is set to =true=, environment variables are
expanded each time a CMD.EXE command is identified, rather than only
once at "parse time".  Useful when using the =vars= object.

The =vars= object maps environment variables to their values, for
example:
#+BEGIN_SRC javascript
CMD.parse("echo %foo%", { expand_inline: true, vars: { foo: "bar" }));
// => [ "echo bar" ]
#+END_SRC

** EXAMPLES
*** Variable expansion
Attempts to expand all variables in to their expanded form, making
analysis of the whole command clearer:
| Input       | Deobfuscated Output           |
|-------------+-------------------------------|
| ~%COMSPEC%~ | ~C:\Windows\System32\cmd.exe~ |

*** Variable find/replace
Replaces all occurances of ~cmd~ inside the ~%COMSPEC%~ var with the
string ~powershell~:
| Input                      | Deobfuscated Output                  |
|----------------------------+--------------------------------------|
| ~%COMSPEC:cmd=powershell%~ | ~C:\Windows\System32\powershell.exe~ |

*** Variable substrings
Fetches the last seven characters within the ~%COMSPEC%~ var:
| Input           | Deobfuscated Output |
|-----------------+---------------------|
| =%COMSPEC:~-7%= | ~cmd.exe~           |

*** Escape-sequence stripping
All escape characters (~^~) are stripped from the command:
| Input                        | Deobfuscated Output |
|------------------------------+---------------------|
| ~CmD /C p^o^w^e^r^s^h^e^l^l~ | ~CmD /C powershell~ |

*** Empty string removal
All empty strings are removed from the command:
| Input            | Deobfuscated Output |
|------------------+---------------------|
| ~pow""ersh""ell~ | ~powershell~        |

*** String widening
Obfuscation of a command can be achieved by excessive use of
double-quotes, for example: =w"s"c"r"i"p"t=.  The /string widening/
algorithm merges quoted and non-quoted regions together:
| Input           | Deobfuscated Output |
|-----------------+---------------------|
| ~w"s"c"r"i"p"t~ | =\"wscript\"=         |

*** Path resolver (/coming soon/)
Any identified paths are resolved in to their absolute form, meaning
we transform this:
| Input                                             | Deobfuscated Output           |
|---------------------------------------------------+-------------------------------|
| ~C:\foo\bar\baz\..\..\..\Windws\System32\cmd.exe~ | ~C:\Windows\System32\cmd.exe~ |

** Reading Material

 - [[https://stackoverflow.com/questions/4094699/how-does-the-windows-command-interpreter-cmd-exe-parse-scripts][How does the Windows Command Interpreter (CMD.EXE) parse scripts?]]
 - [[https://msdn.microsoft.com/en-us/library/a1y7w461.aspx][WINAPI Parsing C Command-Line Arguments]]
 - [[https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/][Everyone quotes command line arguments the wrong way]]
 - [[https://blogs.msdn.microsoft.com/oldnewthing/20100917-00/?p=12833/][Whatâ€™s up with the strange treatment of quotation marks and backslashes by CommandLineToArgvW]]
 - [[https://www.dostips.com/?t=Snippets.Escape][DOS Tips: Escapes]]
 - [[https://docs.microsoft.com/en-gb/windows/desktop/api/shellapi/nf-shellapi-commandlinetoargvw][MSDN CommandLineToArgvW function]]
 - [[https://en.wikibooks.org/wiki/Windows_Batch_Scripting#How_a_command_line_is_interpreted][Windows Batch Scripting: Command Line Interpretation]]
 - [[https://ss64.com/nt/syntax-substring.html][DOS CMD Substrings]]
 - [[https://docs.microsoft.com/en-gb/windows/desktop/ProcThread/environment-variables][MSDN: Environment Variables]]
 - [[https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html][FireEye: Obfuscation in the Wild]]
 - [[https://superuser.com/questions/223104/setting-and-using-variable-within-same-command-line-in-windows-cmd-exe][setting and using a variable within Windows cmd.exe]]
 - [[https://ss64.com/nt/delayedexpansion.html][Delayed Expansion]]
 - [[https://ss64.com/nt/cmd.html][SS64: CMD.exe]]
 - [[https://hackinparis.com/data/slides/2018/talks/HIP2018_Daniel_Bohannon_Invoke_Dosfuscation.pdf][HackInParis Invoke Dosfuscation Slides]]
 - [[http://www.windowsinspired.com/50-ways-to-say-hello/][50 Ways to Say Hello]]
 - [[http://www.daviddeley.com/autohotkey/parameters/parameters.htm][Command line delimiters write-up]]
 - [[https://docs.microsoft.com/en-us/cpp/c-language/parsing-c-command-line-arguments?view=vs-2017][C Command Line Parsing (Microsoft)]]
